"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[1067],{3905:function(e,t,r){r.r(t),r.d(t,{MDXContext:function(){return s},MDXProvider:function(){return f},mdx:function(){return y},useMDXComponents:function(){return u},withMDXComponents:function(){return p}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},a.apply(this,arguments)}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){return function(t){var r=u(t.components);return n.createElement(e,a({},t,{components:r}))}},u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},f=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(r),f=o,d=p["".concat(i,".").concat(f)]||p[f]||m[f]||a;return r?n.createElement(d,l(l({ref:t},s),{},{components:r})):n.createElement(d,l({ref:t},s))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},55202:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var n=r(83117),o=r(80102),a=(r(67294),r(3905)),i=["components"],l={title:"allof",category:"Expression Terms"},c=void 0,s={unversionedId:"expr/allof",id:"expr/allof",title:"allof",description:"The allof expression term evaluates as true if all of the grouped expressions",source:"@site/docs/expr/allof.md",sourceDirName:"expr",slug:"/expr/allof",permalink:"/watchman/docs/expr/allof",draft:!1,editUrl:"https://github.com/facebook/watchman/tree/main/website/docs/expr/allof.md",tags:[],version:"current",frontMatter:{title:"allof",category:"Expression Terms"},sidebar:"tutorialSidebar",previous:{title:"Simple Pattern Syntax",permalink:"/watchman/docs/simple-query"},next:{title:"anyof",permalink:"/watchman/docs/expr/anyof"}},p={},u=[],f={toc:u};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.mdx)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"The ",(0,a.mdx)("inlineCode",{parentName:"p"},"allof")," expression term evaluates as true if all of the grouped expressions\nalso evaluated as true. For example, this expression matches only files whose\nname ends with ",(0,a.mdx)("inlineCode",{parentName:"p"},".txt")," and that are not empty files:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'["allof", ["match", "*.txt"], ["not", "empty"]]\n')),(0,a.mdx)("p",null,"Each array element after the term name is evaluated as an expression of its own:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},'["allof", expr1, expr2, ... exprN]\n')),(0,a.mdx)("p",null,"Evaluation of the subexpressions stops at the first one that returns false."))}m.isMDXComponent=!0}}]);