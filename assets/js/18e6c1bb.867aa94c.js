"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[3285],{3905:function(e,t,n){n.r(t),n.d(t,{MDXContext:function(){return l},MDXProvider:function(){return p},mdx:function(){return f},useMDXComponents:function(){return d},withMDXComponents:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),m=function(e){return function(t){var n=d(t.components);return r.createElement(e,i({},t,{components:n}))}},d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=d(n),p=a,h=m["".concat(o,".").concat(p)]||m[p]||u[p]||i;return n?r.createElement(h,c(c({ref:t},l),{},{components:n})):r.createElement(h,c({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=h;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},67676:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return d}});var r=n(83117),a=n(80102),i=(n(67294),n(3905)),o=["components"],c={title:"watch",category:"Commands"},s=void 0,l={unversionedId:"cmd/watch",id:"cmd/watch",title:"watch",description:"Deprecated starting in version 3.1. We recommend that clients adopt the",source:"@site/docs/cmd/watch.md",sourceDirName:"cmd",slug:"/cmd/watch",permalink:"/watchman/docs/cmd/watch",draft:!1,editUrl:"https://github.com/facebook/watchman/tree/main/website/docs/cmd/watch.md",tags:[],version:"current",frontMatter:{title:"watch",category:"Commands"},sidebar:"tutorialSidebar",previous:{title:"watch-project",permalink:"/watchman/docs/cmd/watch-project"},next:{title:"Clockspec",permalink:"/watchman/docs/clockspec"}},m={},d=[{value:"Case-Insensitivity",id:"case-insensitivity",level:2}],p={toc:d};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.mdx)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.mdx)("p",null,"Deprecated starting in version 3.1. We recommend that clients adopt the\n",(0,i.mdx)("a",{parentName:"p",href:"/watchman/docs/cmd/watch-project"},"watch-project")," command."),(0,i.mdx)("p",null,"Requests that the specified dir is watched for changes. Watchman will track all\nfiles and dirs rooted at the specified path."),(0,i.mdx)("p",null,"From the command line:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-bash"},"$ watchman watch ~/www\n")),(0,i.mdx)("p",null,"Note that, when you're using the CLI, you can specify the root as ",(0,i.mdx)("inlineCode",{parentName:"p"},"~/www"),"\nbecause the shell will resolve ",(0,i.mdx)("inlineCode",{parentName:"p"},"~/www")," to ",(0,i.mdx)("inlineCode",{parentName:"p"},"/home/wez/www"),", but when you use the\nJSON protocol, you are responsible for supplying an absolute path."),(0,i.mdx)("p",null,"JSON:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'["watch", "/home/wez/www"]\n')),(0,i.mdx)("p",null,"Watchman will ",(0,i.mdx)("inlineCode",{parentName:"p"},"realpath(3)")," the directory and start watching it if it isn't\nalready. A newly watched directory is processed in a couple of stages:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Establishes change notification for the directory with the kernel"),(0,i.mdx)("li",{parentName:"ul"},"Queues up a request to crawl the directory"),(0,i.mdx)("li",{parentName:"ul"},"As the directory contents are resolved, those are watched in a similar fashion"),(0,i.mdx)("li",{parentName:"ul"},"All newly observed files are considered changed")),(0,i.mdx)("p",null,"Unless the ",(0,i.mdx)("inlineCode",{parentName:"p"},"--no-save-state")," server option was used to start the watchman\nservice, watches and their associated triggers are saved and re-established\nacross a process restart."),(0,i.mdx)("h2",{id:"case-insensitivity"},"Case-Insensitivity"),(0,i.mdx)("p",null,"Watchman has the following level of support for case-insensitive filesystems,\nstarting in version 2.9.9 on macOS only:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"each watched root is queried to determine if it is case-insensitive. This is\nthe common default for most Mac systems running HFS+."),(0,i.mdx)("li",{parentName:"ul"},"When in case-insensitive mode, Watchman will attempt to resolve the true\ncanonical name of a file on the filesystem when it observes changes."),(0,i.mdx)("li",{parentName:"ul"},"If the case of a filename changes, Watchman will report a delete of the old\nname and a change for the new name."),(0,i.mdx)("li",{parentName:"ul"},"Query expressions that match names will default to case-insensitive when the\nroot is on a case-insensitive filesystem."),(0,i.mdx)("li",{parentName:"ul"},"Watchman's case folding is ASCII case-folding. Note that the ",(0,i.mdx)("inlineCode",{parentName:"li"},"match")," and\n",(0,i.mdx)("inlineCode",{parentName:"li"},"pcre")," query expression terms request case folding support from the containing\nlibrary, and that their case folding behavior is not controlled by Watchman\nbeyond being enabled when the root is case-insensitive."),(0,i.mdx)("li",{parentName:"ul"},"The ",(0,i.mdx)("inlineCode",{parentName:"li"},"path")," generator is always case sensitive.")))}u.isMDXComponent=!0}}]);